<?xml version="1.0" encoding="utf-8"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- These arguments load the electric grippers, for example left_electric_gripper:=true -->
  <arg name="left_electric_gripper" default="false"/>
  <arg name="right_electric_gripper" default="true"/>

  <!-- Load the URDF into the ROS Parameter Server -->
  <!-- This xacro will pull in baxter_base.urdf.xacro, left_end_effector.urdf.xacro,
                                           and right_end_effector.urdf.xacro
       Note: if you set this to false, you MUST have set the robot_description prior
             to launching baxter_world -->
  <arg name="load_robot_description" default="true"/>
  <param if="$(arg load_robot_description)" name="robot_description"
      command="$(find xacro)/xacro --inorder $(find baxter_description)/urdf/baxter_pendulum.urdf.xacro gazebo:=true right_electric_gripper:=$(arg right_electric_gripper) left_eletric_gripper:=$(arg left_electric_gripper)" />

  <!-- We resume the logic in empty_world.launch, changing the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find baxter_gazebo)/worlds/baxter.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the software version into the ROS Parameter Server -->
  <param name="rethink/software_version" value="1.2.0" />

  <!-- Publish a static transform between the world and the base of the robot -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_world" args="0 0 0 0 0 0 1 world base" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-param robot_description -urdf -z 0.93 -model baxter
	      -J baxter::right_s0 -0.272659
	      -J baxter::right_s1 1.04701
	      -J baxter::right_e0 -0.00123203
	      -J baxter::right_e1 0.49262
	      -J baxter::right_w0 -0.0806423
	      -J baxter::right_w1 -0.0620532
	      -J baxter::right_w2 0.0265941
          -J baxter::left_s0 -0.6401566958751568
          -J baxter::left_s1 -0.5520893692273343
	      -J baxter::left_e0 -0.2555993354266744
	      -J baxter::left_e1 1.6569697172206772
	      -J baxter::left_w0 -0.7721361439224556
	      -J baxter::left_w1 -1.3734321877835696
          -J baxter::left_w2 0.4882715704169034
          -J baxter::left_pendulum_phi 0
          -J baxter::left_pendulum_theta 0" />

  <!-- ros_control baxter launch file -->
  <include file="$(find baxter_sim_hardware)/launch/baxter_sdk_control_pendulum.launch">
      <arg name="right_electric_gripper" value="$(arg right_electric_gripper)"/>
      <arg name="left_electric_gripper" value="$(arg left_electric_gripper)"/>
      <arg name="gui" value="false" />
  </include>

  <node name="pendulum_state_sim_node" pkg="baxter_gazebo" type="pendulum_state_sim.py" output="screen" />

</launch>
